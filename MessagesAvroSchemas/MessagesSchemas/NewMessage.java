/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package MessagesSchemas;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class NewMessage extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NewMessage\",\"namespace\":\"MessagesSchemas\",\"fields\":[{\"name\":\"messageId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"handlerName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"messageDetails\",\"type\":{\"type\":\"record\",\"name\":\"MessageDetails\",\"fields\":[{\"name\":\"sendingTime\",\"type\":[\"long\"],\"logicalType\":\"time-millis\"},{\"name\":\"messageContent\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"parsed\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"},{\"name\":\"serviceId\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"],\"default\":\"null\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.String messageId;
  @Deprecated public java.lang.String handlerName;
  @Deprecated public MessagesSchemas.MessageDetails messageDetails;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public NewMessage() {}

  /**
   * All-args constructor.
   */
  public NewMessage(java.lang.String messageId, java.lang.String handlerName, MessagesSchemas.MessageDetails messageDetails) {
    this.messageId = messageId;
    this.handlerName = handlerName;
    this.messageDetails = messageDetails;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return messageId;
    case 1: return handlerName;
    case 2: return messageDetails;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: messageId = (java.lang.String)value$; break;
    case 1: handlerName = (java.lang.String)value$; break;
    case 2: messageDetails = (MessagesSchemas.MessageDetails)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'messageId' field.
   */
  public java.lang.String getMessageId() {
    return messageId;
  }

  /**
   * Sets the value of the 'messageId' field.
   * @param value the value to set.
   */
  public void setMessageId(java.lang.String value) {
    this.messageId = value;
  }

  /**
   * Gets the value of the 'handlerName' field.
   */
  public java.lang.String getHandlerName() {
    return handlerName;
  }

  /**
   * Sets the value of the 'handlerName' field.
   * @param value the value to set.
   */
  public void setHandlerName(java.lang.String value) {
    this.handlerName = value;
  }

  /**
   * Gets the value of the 'messageDetails' field.
   */
  public MessagesSchemas.MessageDetails getMessageDetails() {
    return messageDetails;
  }

  /**
   * Sets the value of the 'messageDetails' field.
   * @param value the value to set.
   */
  public void setMessageDetails(MessagesSchemas.MessageDetails value) {
    this.messageDetails = value;
  }

  /** Creates a new NewMessage RecordBuilder */
  public static MessagesSchemas.NewMessage.Builder newBuilder() {
    return new MessagesSchemas.NewMessage.Builder();
  }
  
  /** Creates a new NewMessage RecordBuilder by copying an existing Builder */
  public static MessagesSchemas.NewMessage.Builder newBuilder(MessagesSchemas.NewMessage.Builder other) {
    return new MessagesSchemas.NewMessage.Builder(other);
  }
  
  /** Creates a new NewMessage RecordBuilder by copying an existing NewMessage instance */
  public static MessagesSchemas.NewMessage.Builder newBuilder(MessagesSchemas.NewMessage other) {
    return new MessagesSchemas.NewMessage.Builder(other);
  }
  
  /**
   * RecordBuilder for NewMessage instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NewMessage>
    implements org.apache.avro.data.RecordBuilder<NewMessage> {

    private java.lang.String messageId;
    private java.lang.String handlerName;
    private MessagesSchemas.MessageDetails messageDetails;

    /** Creates a new Builder */
    private Builder() {
      super(MessagesSchemas.NewMessage.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(MessagesSchemas.NewMessage.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.messageId)) {
        this.messageId = data().deepCopy(fields()[0].schema(), other.messageId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.handlerName)) {
        this.handlerName = data().deepCopy(fields()[1].schema(), other.handlerName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.messageDetails)) {
        this.messageDetails = data().deepCopy(fields()[2].schema(), other.messageDetails);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing NewMessage instance */
    private Builder(MessagesSchemas.NewMessage other) {
            super(MessagesSchemas.NewMessage.SCHEMA$);
      if (isValidValue(fields()[0], other.messageId)) {
        this.messageId = data().deepCopy(fields()[0].schema(), other.messageId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.handlerName)) {
        this.handlerName = data().deepCopy(fields()[1].schema(), other.handlerName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.messageDetails)) {
        this.messageDetails = data().deepCopy(fields()[2].schema(), other.messageDetails);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'messageId' field */
    public java.lang.String getMessageId() {
      return messageId;
    }
    
    /** Sets the value of the 'messageId' field */
    public MessagesSchemas.NewMessage.Builder setMessageId(java.lang.String value) {
      validate(fields()[0], value);
      this.messageId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'messageId' field has been set */
    public boolean hasMessageId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'messageId' field */
    public MessagesSchemas.NewMessage.Builder clearMessageId() {
      messageId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'handlerName' field */
    public java.lang.String getHandlerName() {
      return handlerName;
    }
    
    /** Sets the value of the 'handlerName' field */
    public MessagesSchemas.NewMessage.Builder setHandlerName(java.lang.String value) {
      validate(fields()[1], value);
      this.handlerName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'handlerName' field has been set */
    public boolean hasHandlerName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'handlerName' field */
    public MessagesSchemas.NewMessage.Builder clearHandlerName() {
      handlerName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'messageDetails' field */
    public MessagesSchemas.MessageDetails getMessageDetails() {
      return messageDetails;
    }
    
    /** Sets the value of the 'messageDetails' field */
    public MessagesSchemas.NewMessage.Builder setMessageDetails(MessagesSchemas.MessageDetails value) {
      validate(fields()[2], value);
      this.messageDetails = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'messageDetails' field has been set */
    public boolean hasMessageDetails() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'messageDetails' field */
    public MessagesSchemas.NewMessage.Builder clearMessageDetails() {
      messageDetails = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public NewMessage build() {
      try {
        NewMessage record = new NewMessage();
        record.messageId = fieldSetFlags()[0] ? this.messageId : (java.lang.String) defaultValue(fields()[0]);
        record.handlerName = fieldSetFlags()[1] ? this.handlerName : (java.lang.String) defaultValue(fields()[1]);
        record.messageDetails = fieldSetFlags()[2] ? this.messageDetails : (MessagesSchemas.MessageDetails) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
